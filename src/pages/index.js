import { useState, useEffect } from "react";
import Head from "next/head";
import { Container, Flex, Button } from "@chakra-ui/react";
import { useAuth } from "@/components/context/authContext";
import FileList from "@/components/FileList";
import refreshAccessToken from "@/components/refreshAccessToken";

export default function Home() {
  const [files, setFiles] = useState([]);
  const [isClient, setIsClient] = useState(false);
  const { authToken } = useAuth();

  const sortFiles = (files) => {
    const folders = files.filter((file) => file[".tag"] === "folder");
    const otherFiles = files.filter((file) => file[".tag"] !== "folder");

    folders.sort((a, b) => a.name.localeCompare(b.name));
    otherFiles.sort((a, b) => a.name.localeCompare(b.name));

    return [...folders, ...otherFiles];
  };

  const fetchFiles = async () => {
    try {
      const response = await fetch(
        "https://api.dropboxapi.com/2/files/list_folder",
        {
          method: "POST",
          headers: {
            Authorization: `Bearer ${authToken}`,
            "Content-Type": "application/json",
          },
          body: JSON.stringify({
            path: "",
          }),
        }
      );

      if (!response.ok && response.status === 401) {
        const { refreshToken } = useAuth();
        if (refreshToken) {
          const newToken = await refreshAccessToken(refreshToken);
          if (newToken) {
            updateToken(newToken, refreshToken);
            return fetchFiles();
          }
        }
      }

      const data = await response.json();

      setFiles((prevFiles) => {
        const combinedFiles = [
          ...prevFiles,
          ...data.entries.filter(
            (newFile) => !prevFiles.some((file) => file.id === newFile.id)
          ),
        ];

        return sortFiles(combinedFiles);
      });
    } catch (error) {
      console.error("Error fetching files:", error);
    }
  };

  useEffect(() => {
    if (authToken) {
      fetchFiles();
    }
    setIsClient(true);
  }, [authToken]);

  const handleLogin = () => {
    const CLIENT_ID = "s4ngwjneimiqbs2";
    const REDIRECT_URI = "http://localhost:3000/auth";
    window.location.href = `https://www.dropbox.com/oauth2/authorize?client_id=${CLIENT_ID}&redirect_uri=${encodeURIComponent(
      REDIRECT_URI
    )}&response_type=code`;
  };

  if (!isClient) {
    return <div>Loading...</div>;
  }

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Container as="main" maxW="container.lg">
        {!authToken ? (
          <Button onClick={handleLogin}>Login with Dropbox</Button>
        ) : (
          <>
            <FileList files={files} />
          </>
        )}
      </Container>
    </>
  );
}
