import Head from "next/head";
import { Container } from "@chakra-ui/layout";
import { Button, Flex, Text, Heading } from "@chakra-ui/react";
import { useAuth } from "../context/authContext";
import FileList from "../FileList";
import CreateFolder from "../CreateFolder";
import UploadFile from "../UploadFile";

const Main = ({ title, files, onChange, currentPath }) => {
  // Use authentication context to check if the user is authenticated
  const { authToken } = useAuth();

  // Handler for Dropbox login, it redirects the user to the Dropbox OAuth page
  const handleLogin = () => {
    const CLIENT_ID = "s4ngwjneimiqbs2";
    const REDIRECT_URI = "http://localhost:3000/auth";
    // Redirect to Dropbox OAuth for authentication
    window.location.href = `https://www.dropbox.com/oauth2/authorize?client_id=${CLIENT_ID}&redirect_uri=${encodeURIComponent(
      REDIRECT_URI
    )}&response_type=code`;
  };

  return (
    <>
      <Head>
        {/* Setting the page title and metadata */}
        <title>{title}</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
      </Head>

      <Container maxW="container.lg">
        {/* Conditional rendering based on authentication status */}
        {!authToken ? (
          // Show login prompt if not authenticated
          <Flex
            width="100%"
            height="100vh"
            alignItems="center"
            justifyContent="center"
            direction="column"
            gap="25px"
          >
            <Text>Please login with Dropbox to continue.</Text>
            <Button
              align="center"
              bg="#3d67ff"
              color="white"
              _hover={{ bg: "#3153cc" }}
              onClick={handleLogin}
            >
              Login with Dropbox
            </Button>
          </Flex>
        ) : (
          // Show file management interface if authenticated
          <>
            {/* Interface for creating folders and uploading files */}
            <Flex w="100%" mt="30px" alignItems="center" gap="25px">
              <CreateFolder onChange={onChange} currentPath={currentPath} />
              <UploadFile onChange={onChange} currentPath={currentPath} />
            </Flex>
            <Heading size="lg" mt="30px">
              main{currentPath} {/* Displaying the current path */}
            </Heading>
            {/* Listing files in the current directory */}
            <FileList
              files={files}
              onChange={onChange}
              currentPath={currentPath}
            />
          </>
        )}
      </Container>
    </>
  );
};

export default Main;
